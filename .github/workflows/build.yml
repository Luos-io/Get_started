name: Build

on:
  push:

concurrency:
  group: dev-build-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  code-format:
    name: Code format
    runs-on: ubuntu-latest
    steps:
      - name: Check out Luos repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.5"

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install -g clang-format@1.5.0

      - name: Check for code format
        run: python .github/workflows/run-clang-format.py -r .

  get-started-build:
    name: Get started build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        project_folders:
          [
            Arduino,
            NUCLEO-F072RB,
            NUCLEO-F401RE,
            NUCLEO-F410RB,
            NUCLEO-G431KB,
            NUCLEO-L432KC,
          ]
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Check out Luos repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.5"

      - name: Install dependencies
        run: |
          # Save branch name
          branch_name=$(git branch --show-current)
          origine_branch_name="origin/${branch_name}"
          echo current branch name is ${branch_name}

      - name: Run PlatformIO
        run: |
          rootPath=$(pwd)
          for d in ${{ matrix.project_folders }}/*/
          do
            # Parse all folder
            if [ -f "$d/platformio.ini" ]
            then
              cd $d
              # This is a PIO project compile it for all envs
              for e in $(pio project config | grep "env:" | cut -c5-)
              do
                echo "Compiling $d in env $e"
                platformio run -d "$rootPath/$d" -e $e
              done
              cd $rootPath
            else
              # This folder could contain other projects, continue digging
              for dd in $d*/
              do
                # Parse all folder
                if [ -f "$dd/platformio.ini" ]
                then
                  cd $dd
                  # This is a PIO project compile it
                  for e in $(pio project config | grep "env:" | cut -c5-)
                  do
                    echo "Compiling $dd in env $e"
                    platformio run -d "$rootPath/$dd" -e $e
                  done
                  cd $rootPath
                fi
              done
            fi
          done

  build-success:
    name: Build success
    needs: get-started-build
    runs-on: ubuntu-latest
    steps:
      - run: echo "Build succeed!"
